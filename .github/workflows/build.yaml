name: Build and Deploy

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  eslint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        facilities: [zdv, zan, hcf]

    steps:
      - uses: actions/checkout@v3.1.0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
          cache-depedency-path: yarn.lock
      - name: Install dependencies
        run: yarn install --immutable
      - name: Run eslint
        run: yarn lint
      - name: Test build
        run: yarn build
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: eslint
    steps:
    - uses: actions/checkout@v3
      name: Checkout repo
    - name: Set sha_short
      id: vars
      run: |-
        echo "sha_short=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
        # Set default branch name for PRs, as we still want to test build an image on PRs
        # but we have no branch to set a tag for.
        branch="test"
        if [[ "$GITHUB_REF" == "refs/heads/"* ]]; then
          branch="${GITHUB_REF#refs/heads/}"
        fi
        echo "branch=${branch}" >> $GITHUB_ENV
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Install cosign
      uses: sigstore/cosign-installer@main
    - name: Create ZDV env
      if: ${{ matrix.facility == 'zdv' }}
      run: |
        cat <<EOF > .env
        VITE_EMAIL_DOMAIN="denartcc.org"
        VITE_FACILITY_NAME="Denver ARTCC"
        VITE_GIT_HASH="${{ steps.vars.outputs.sha_short }}"
        EOF
    - name: Create ZAN env
      if: ${{ matrix.facility == 'zan' }}
      run: |
        cat <<EOF > .env
        VITE_EMAIL_DOMAIN="vzanartcc.net"
        VITE_FACILITY_NAME="Anchorage ARTCC"
        VITE_GIT_HASH="${{ steps.vars.outputs.sha_short }}"
        EOF
    - name: Create HCF env
      if: ${{ matrix.facility == 'hcf' }}
      run: |
        cat <<EOF > .env
        VITE_EMAIL_DOMAIN="vhcf.net"
        VITE_FACILITY_NAME="Honolulu Control Facility"
        VITE_GIT_HASH="${{ steps.vars.outputs.sha_short }}"
        EOF
    - name: Build Image
      if: ${{ env.branch == 'main' }}
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:${{ matrix.facility }}-${{ env.branch }}-${{ env.sha_short }} -t ${{ secrets.DOCKER_USERNAME }}/frontend:${{ matrix.facility }}-${{ env.branch }} .
    # If dev branch, we want to target the dev API... so we do this through an ARG that sets the mode to staging.
    - name: Build Staging Image
      if: ${{ env.branch == 'dev' }}
      run: |
        docker build --build-arg build_cmd="build-dev" -t ${{ secrets.DOCKER_USERNAME }}/frontend:${{ matrix.facility }}-${{ env.branch }}-${{ env.sha_short }} -t ${{ secrets.DOCKER_USERNAME }}/frontend:${{ matrix.facility }}-${{ env.branch }} .
    - name: Push Image
      if: ${{ github.event_name == 'push' }}
      run: |
        docker push --all-tags ${{ secrets.DOCKER_USERNAME }}/frontend
    - name: Sign image
      if: ${{ github.event_name == 'push' }}
      env:
        COSIGN_PASSWORD: ${{ secrets.COSIGN_PRIVATE_KEY_PASSWORD }}
        COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
      run: |
        image_digest_sha=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ secrets.DOCKER_USERNAME }}/frontend:${{ matrix.facility }}-${{ env.branch }}-${{ env.sha_short }})
        image_digest_branch=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ secrets.DOCKER_USERNAME }}/frontend:${{ matrix.facility }}-${{ env.branch }})
        cosign sign --key env://COSIGN_PRIVATE_KEY $image_digest_sha $image_digest_branch
###########################################################################################################
  deploy-kzdv:
    name: Update KZDV GitOps Repo
    runs-on: ubuntu-latest
    needs: build
    if : ${{ github.event_name == 'push' && contains(fromJson('["refs/heads/dev", "refs/heads/main"]'), github.ref) && matrix.facility == 'zdv' }}

    steps:
    - name: Set sha_short
      id: vars
      run: |-
        echo "sha_short=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
        # Set default branch name for PRs, as we still want to test build an image on PRs
        # but we have no branch to set a tag for.
        branch="test"
        if [[ "$GITHUB_REF" == "refs/heads/"* ]]; then
          branch="${GITHUB_REF#refs/heads/}"
        fi
        echo "branch=${branch}" >> $GITHUB_ENV
    - name: Checkout KZDV Gitops Repo
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GH_PIPELINE_PAT }}
        repository: 'kzdv/gitops'
        path: gitops
    - name: Configure git
      run: |-
        cd $GITHUB_WORKSPACE/gitops
        git config user.name "${{ secrets.GH_PIPELINE_USERNAME }}"
        git config user.email "wm@denartcc.org"
    - name: Setup Kustomize
      uses: imranismail/setup-kustomize@v2
      with:
        kustomize-version: "4.4.1"
    - name: Update dev overlay
      if: ${{ github.ref == 'refs/heads/dev' }}
      run: |
        cd $GITHUB_WORKSPACE/gitops/overlays/dev
        kustomize edit set image adhp/zdv-frontend=adhp/frontend:${{ matrix.facility }}-${{ env.branch }}-${{ env.sha_short }}
    - name: Update prod overlay
      if: ${{ github.ref == 'refs/heads/main' }}
      run: |
        cd $GITHUB_WORKSPACE/gitops/overlays/prod
        kustomize edit set image adhp/zdv-frontend=adhp/frontend:${{ matrix.facility }}-${{ env.branch }}-${{ env.sha_short }}
    - name: Commit manifests
      run: |
        cd $GITHUB_WORKSPACE/gitops
        git add .
        git commit -m "Update manifests for api"
    - name: Push to gitops repo
      run: |
        cd $GITHUB_WORKSPACE/gitops
        git push origin main
###########################################################################################################
  deploy-paza:
    name: Update PAZA GitOps Repo
    runs-on: ubuntu-latest
    needs: build
    if : ${{ github.event_name == 'push' && contains(fromJson('["refs/heads/dev", "refs/heads/main"]'), github.ref) && matrix.facility == 'zan' }}
    steps:
    - name: Set sha_short
      id: vars
      run: |-
        echo "sha_short=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
        # Set default branch name for PRs, as we still want to test build an image on PRs
        # but we have no branch to set a tag for.
        branch="test"
        if [[ "$GITHUB_REF" == "refs/heads/"* ]]; then
          branch="${GITHUB_REF#refs/heads/}"
        fi
        echo "branch=${branch}" >> $GITHUB_ENV
    - name: Checkout PAZA Gitops Repo
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.PAZA_GITOPS_TOKEN }}
        repository: 'vpaza/gitops'
        path: gitops-paza
    - name: Configure git
      run: |-
        cd $GITHUB_WORKSPACE/gitops-paza
        git config user.name "${{ secrets.PAZA_GITOPS_USER }}"
        git config user.email "${{ secrets.PAZA_GITOPS_EMAIL }}"
    - name: Setup Kustomize
      uses: imranismail/setup-kustomize@v2
      with:
        kustomize-version: "4.4.1"
    - name: Update dev overlay
      if: ${{ github.ref == 'refs/heads/dev' }}
      run: |
        cd $GITHUB_WORKSPACE/gitops-paza/overlays/dev
        kustomize edit set image adhp/zan-frontend=adhp/frontend:${{ matrix.facility }}-${{ env.branch }}-${{ env.sha_short }}
    - name: Update prod overlay
      if: ${{ github.ref == 'refs/heads/main' }}
      run: |
        HASH=`echo ${GITHUB_SHA} | cut -c1-7`
        cd $GITHUB_WORKSPACE/gitops-paza/overlays/prod
        kustomize edit set image adhp/zan-frontend=adhp/frontend:${{ matrix.facility }}-${{ env.branch }}-${{ env.sha_short }}
    - name: Commit manifests
      run: |
        cd $GITHUB_WORKSPACE/gitops-paza
        git add .
        git commit -m "Update manifests for api"
    - name: Push to gitops repo
      run: |
        cd $GITHUB_WORKSPACE/gitops-paza
        git push origin main
###########################################################################################################
  deploy-phzh:
    name: Update PHZH GitOps Repo
    runs-on: ubuntu-latest
    needs: build
    if : ${{ github.event_name == 'push' && contains(fromJson('["refs/heads/dev", "refs/heads/main"]'), github.ref) && matrix.facility == 'hcf' }}

    steps:
    - name: Set sha_short
      id: vars
      run: |-
        echo "sha_short=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
        # Set default branch name for PRs, as we still want to test build an image on PRs
        # but we have no branch to set a tag for.
        branch="test"
        if [[ "$GITHUB_REF" == "refs/heads/"* ]]; then
          branch="${GITHUB_REF#refs/heads/}"
        fi
        echo "branch=${branch}" >> $GITHUB_ENV
    - name: Checkout PHZH Gitops Repo
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.PAZA_GITOPS_TOKEN }}
        repository: 'vphzh/gitops'
        path: gitops-phzh
    - name: Configure git
      run: |-
        cd $GITHUB_WORKSPACE/gitops-phzh
        git config user.name "${{ secrets.PAZA_GITOPS_USER }}"
        git config user.email "${{ secrets.PAZA_GITOPS_EMAIL }}"
    - name: Setup Kustomize
      uses: imranismail/setup-kustomize@v2
      with:
        kustomize-version: "4.4.1"
    - name: Update dev overlay
      if: ${{ github.ref == 'refs/heads/dev' }}
      run: |
        cd $GITHUB_WORKSPACE/gitops-phzh/overlays/dev
        kustomize edit set image adhp/hcf-frontend=adhp/frontend:${{ matrix.facility }}-${{ env.branch }}-${{ env.sha_short }}
    - name: Update prod overlay
      if: ${{ github.ref == 'refs/heads/main' }}
      run: |
        cd $GITHUB_WORKSPACE/gitops-phzh/overlays/prod
        kustomize edit set image adhp/hcf-frontend=adhp/frontend:${{ matrix.facility }}-${{ env.branch }}-${{ env.sha_short }}
    - name: Commit manifests
      run: |
        cd $GITHUB_WORKSPACE/gitops-phzh
        git add .
        git commit -m "Update manifests for api"
    - name: Push to gitops repo
      run: |
        cd $GITHUB_WORKSPACE/gitops-phzh
        git push origin main
