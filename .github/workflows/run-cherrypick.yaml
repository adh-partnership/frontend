name: Create Cherrypick PR

on:
  workflow_dispatch:
    inputs:
      author:
        description: 'Author of PR to cherrypick'
        required: true
      pr:
        description: 'PR number to cherrypick'
        required: true
      title:
        description: 'Title of PR to cherrypick'
        required: true
      branch:
        description: 'Branch to cherrypick to'
        required: true

jobs:
  cherrypick:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build Cherrypick(s)
        id: cherrypick
        env:
          GITHUB_TOKEN: ${{ secrets.ADH_BOT_TOKEN }}
        run: |
          git config --global user.name "adh-bot"
          git config --global user.email "dhawton+adh@gmail.com"
          git remote update
          git pull origin
          git fetch --all

          # Check if branch exists on origin
          if git ls-remote --exit-code --heads origin cherrypick/${{ github.event.inputs.branch }}-pr${{ github.event.inputs.pr }}; then
            echo "Branch cherrypick/${{ github.event.inputs.branch }}-pr${{ github.event.inputs.pr }} already exists on origin. Exiting."
            exit 1
          fi

          git checkout -b cherrypick/${{ github.event.inputs.branch }}-pr${{ github.event.inputs.pr }} origin/${{ github.event.inputs.branch }}
          gh pr diff ${{ github.event.inputs.pr }} --patch | git am --3way
          git push origin cherrypick/${{ github.event.inputs.branch }}-pr${{ github.event.inputs.pr }}

          gh pr create -t "[${{ github.event.inputs.branch }}] Cherrypick PR #${{ github.event.inputs.pr }}: ${{ github.event.inputs.title }}" -B ${{ github.event.inputs.branch }} -H cherrypick/${{ github.event.inputs.branch }}-pr${{ github.event.inputs.pr }} --body "Automated cherrypick PR for PR #${{ github.event.inputs.pr }}: ${{ github.event.inputs.title }}"
          pr_number=$(gh pr list --repo adh-partnership/frontend --json number,headRefName | jq -r '.[] | select(.headRefName == "cherrypick/${{ github.event.inputs.branch }}-pr${{ github.event.inputs.pr }}") | .number')
          echo "pr_number=$pr_number" >> $GITHUB_ENV
      - name: Create issue on failure
        if: ${{ failure() }}
        uses: dacbd/create-issue-action@main
        id: failed-issue
        with:
          token: ${{ secrets.ADH_BOT_TOKEN }}
          assignees: ${{ github.event.inputs.author }}
          title: Cherrypick failed for PR ${{ github.event.inputs.pr }}
          body: |
            Cherrypick failed for PR #${{ github.event.inputs.pr }}! Please create a manual cherrypick PR. For more information, see the GitHub Action log at ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}.
      - name: Comment on PR about failure
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.ADH_BOT_TOKEN }}
        run: |
          gh pr comment ${{ github.event.inputs.pr }} --body "Cherrypick failed for ${branch}, PR #${{ github.event.inputs.pr }}. Please create a manual cherrypick PR. For more information, see the GitHub Action log at ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}. Issue opened at ${{ steps.failed-issue.outputs.html_url }}."
      - name: Comment on PR about success
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.ADH_BOT_TOKEN }}
        run: |
          gh pr comment ${{ github.event.inputs.pr }} --body "Cherrypick opened for ${branch}: #${{ env.pr_number }}."

